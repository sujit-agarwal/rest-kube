---
# Source: rest-kube/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rest-kube
  labels:
    helm.sh/chart: rest-kube-0.1.0
    app.kubernetes.io/name: rest-kube
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: rest-kube
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: rest-kube/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-kube
  labels:
    helm.sh/chart: rest-kube-0.1.0
    app.kubernetes.io/name: rest-kube
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rest-kube
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rest-kube
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: default
      containers:
        - name: rest-kube
          image: "rest-kube:latest"
          imagePullPolicy: Never
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: "appd-shared-conf"
              mountPath: /app
      initContainers:
        - name: init-myservice
          image: "agent:latest"
          imagePullPolicy: Never
          command: ["/bin/sh"]
          args: ["-c","mkdir -p /app && cp -a /appdynamics/* app/"]
          volumeMounts:
            - name: "appd-shared-conf"
              mountPath: /app
      volumes:
        - name: "appd-shared-conf"
          emptyDir: {}